pipeline {
    agent {
        docker {
            image 'docker:latest'
            args '-u root:root -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }

    environment {
        IMAGE = 'anoziefc/awesome-compose-web'
        TAG = "${env.BUILD_NUMBER}"
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: '1'))
        disableConcurrentBuilds()
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Clone Repository') {
            steps {
                sh 'git clone https://github.com/docker/awesome-compose.git'
            }
        }
        stage('Dockerfile Lint') {
            steps {
                dir('awesome-compose/nginx-nodejs-redis/web') {
                    sh 'docker run --rm -v $PWD:/app -w /app hadolint/hadolint hadolint Dockerfile'
                }
            }
        }
        stage('Docker Login') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh 'echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin'
                }
            }
        }
        stage('Docker Build') {
            steps {
                dir('awesome-compose/nginx-nodejs-redis/web') {
                    sh """
                        docker build -t ${IMAGE}:${TAG} .
                        docker tag ${IMAGE}:${TAG} ${IMAGE}:latest
                    """
                }
            }
        }
        stage('Docker Push') {
            steps {
                sh """
                    docker push ${IMAGE}:${TAG}
                    docker push ${IMAGE}:latest
                """
            }
        }
        stage('Cleanup') {
            steps {
                sh 'docker system prune -af'
            }
        }  
    }

    post {
        always {
            sh 'docker logout || true'
        }
    }
}
