services:
  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/traefik.yml:ro
      - ./traefik/dynamic.yml:/dynamic.yml:ro
      - ./traefik/acme.json:/acme.json
      - ./traefik/users.txt:/users.txt:ro
      - ./traefik/logs:/var/log 
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`gemstraefic.duckdns.org`)"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=dashboard-auth@file"

  whoami:
    image: traefik/whoami
    container_name: whoami1
    restart: unless-stopped
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami1.rule=Host(`mywhoami.duckdns.org`)"
      - "traefik.http.routers.whoami1.tls=true"
      - "traefik.http.routers.whoami1.tls.certresolver=letsencrypt"
      - "traefik.http.services.whoami1.loadbalancer.server.port=80"

  nginx-auth:
    image: nginx:alpine
    container_name: nginx-auth
    restart: unless-stopped
    volumes:
      - ./nginx/index.html:/usr/share/nginx/html/index.html:ro
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx-auth.rule=Host(`gemsnginx.duckdns.org`)"
      - "traefik.http.routers.nginx-auth.tls=true"
      - "traefik.http.routers.nginx-auth.tls.certresolver=letsencrypt"
      - "traefik.http.routers.nginx-auth.middlewares=nginx-basic-auth@file"
      - "traefik.http.services.nginx-auth.loadbalancer.server.port=80"

networks:
  traefik:
    external: true
